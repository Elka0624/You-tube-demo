{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Elka-Tube\\\\project\\\\src\\\\Companets\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Container, Stack, Typography } from '@mui/material';\nimport { colors } from '../../Constants/Colors';\nimport { Category } from '../';\nimport { Videos } from '../index';\nimport { ApiService } from '../../Service/api.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('New');\n  const selectedCategoryHandler = category => setSelectedCategory(category);\n  useEffect(() => {\n    ApiService.fetching('search').then(data => console.log(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    children: [/*#__PURE__*/_jsxDEV(Category, {\n      selectedCategoryHandler: selectedCategoryHandler,\n      selectedCategory: selectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      sx: {\n        height: '90vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: '90%',\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          fontWeight: 'bold',\n          children: [selectedCategory, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: colors.secondary\n            },\n            children: \"Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Videos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"TDdBGud8UmcO9zqEwB3JjJEIEPs=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","Box","Container","Stack","Typography","colors","Category","Videos","ApiService","jsxDEV","_jsxDEV","Main","_s","selectedCategory","setSelectedCategory","selectedCategoryHandler","category","fetching","then","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","p","sx","height","maxWidth","variant","fontWeight","style","color","secondary","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Elka-Tube/project/src/Companets/Main/Main.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Box, Container, Stack, Typography } from '@mui/material';\r\nimport { colors } from '../../Constants/Colors'\r\nimport { Category } from '../';\r\nimport { Videos } from '../index';\r\nimport { ApiService } from '../../Service/api.service'\r\n\r\nconst Main = () => {\r\n    const [selectedCategory, setSelectedCategory] = useState('New')\r\n    const selectedCategoryHandler = category => setSelectedCategory(category)\r\n\r\n    useEffect(() => {\r\n        ApiService.fetching('search').then(data => console.log(data))\r\n    }, []) \r\n\r\n\r\nreturn (\r\n    <Stack>\r\n        <Category \r\n            selectedCategoryHandler={selectedCategoryHandler}\r\n            selectedCategory={selectedCategory}/>\r\n        <Box p={2} sx={{ height: '90vh'}}>\r\n            <Container maxWidth={'90%'}>\r\n                <Typography variant='h4' fontWeight={'bold'}>\r\n                    {selectedCategory} <span style={{color: colors.secondary}}>Video</span>\r\n                </Typography>\r\n                <Videos />\r\n            </Container>\r\n        </Box>\r\n    </Stack>\r\n)\r\n}\r\n\r\nexport default Main\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACjE,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,QAAQ,QAAQ,KAAK;AAC9B,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,UAAU,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMgB,uBAAuB,GAAGC,QAAQ,IAAIF,mBAAmB,CAACE,QAAQ,CAAC;EAEzEhB,SAAS,CAAC,MAAM;IACZQ,UAAU,CAACS,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAGV,oBACIT,OAAA,CAACP,KAAK;IAAAmB,QAAA,gBACFZ,OAAA,CAACJ,QAAQ;MACLS,uBAAuB,EAAEA,uBAAwB;MACjDF,gBAAgB,EAAEA;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzChB,OAAA,CAACT,GAAG;MAAC0B,CAAC,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAP,QAAA,eAC7BZ,OAAA,CAACR,SAAS;QAAC4B,QAAQ,EAAE,KAAM;QAAAR,QAAA,gBACvBZ,OAAA,CAACN,UAAU;UAAC2B,OAAO,EAAC,IAAI;UAACC,UAAU,EAAE,MAAO;UAAAV,QAAA,GACvCT,gBAAgB,EAAC,GAAC,eAAAH,OAAA;YAAMuB,KAAK,EAAE;cAACC,KAAK,EAAE7B,MAAM,CAAC8B;YAAS,CAAE;YAAAb,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACbhB,OAAA,CAACH,MAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAAd,EAAA,CAxBKD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA0BV,eAAeA,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}