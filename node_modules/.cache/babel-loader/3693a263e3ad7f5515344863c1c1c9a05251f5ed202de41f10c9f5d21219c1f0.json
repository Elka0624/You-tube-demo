{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Elka-Tube\\\\project\\\\src\\\\Companets\\\\Channel-card\\\\ChannelCard.jsx\";\nimport React from 'react';\nimport { Box, CardMedia, Typography, CardContent } from '@mui/material';\nimport { CheckCircle } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelCard = _ref => {\n  var _video$snippet, _video$snippet2, _video$snippet2$thumb, _video$snippet2$thumb2, _video$snippet3, _video$snippet4, _video$statistics, _video$statistics2;\n  let {\n    video\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      boxShadow: 'none',\n      borderRadius: '20px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: {\n        xs: '356px',\n        md: '320px'\n      },\n      height: '326px',\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/channel/${video === null || video === void 0 ? void 0 : (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.channelId}`,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          image: video === null || video === void 0 ? void 0 : (_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : (_video$snippet2$thumb = _video$snippet2.thumbnails) === null || _video$snippet2$thumb === void 0 ? void 0 : (_video$snippet2$thumb2 = _video$snippet2$thumb.default) === null || _video$snippet2$thumb2 === void 0 ? void 0 : _video$snippet2$thumb2.url,\n          alt: video === null || video === void 0 ? void 0 : (_video$snippet3 = video.snippet) === null || _video$snippet3 === void 0 ? void 0 : _video$snippet3.title,\n          sx: {\n            borderRadius: '50%',\n            height: '180px',\n            width: '180px',\n            mb: 2,\n            border: '1px solid #e3e3e3'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: 'h6',\n          children: [video === null || video === void 0 ? void 0 : (_video$snippet4 = video.snippet) === null || _video$snippet4 === void 0 ? void 0 : _video$snippet4.title, /*#__PURE__*/_jsxDEV(CheckCircle, {\n            sx: {\n              fontSize: '14px',\n              color: 'gray',\n              ml: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), (video === null || video === void 0 ? void 0 : (_video$statistics = video.statistics) === null || _video$statistics === void 0 ? void 0 : _video$statistics.subscriberCount) && /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: '15px',\n            fontWieght: 500,\n            color: 'gray'\n          },\n          children: [parseInt(video === null || video === void 0 ? void 0 : (_video$statistics2 = video.statistics) === null || _video$statistics2 === void 0 ? void 0 : _video$statistics2.subscriberCount).toLocaleString(\"en-US\"), '', \" Subscribers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = ChannelCard;\nexport default ChannelCard;\nvar _c;\n$RefreshReg$(_c, \"ChannelCard\");","map":{"version":3,"names":["React","Box","CardMedia","Typography","CardContent","CheckCircle","jsxDEV","_jsxDEV","ChannelCard","_ref","_video$snippet","_video$snippet2","_video$snippet2$thumb","_video$snippet2$thumb2","_video$snippet3","_video$snippet4","_video$statistics","_video$statistics2","video","sx","boxShadow","borderRadius","display","justifyContent","alignItems","width","xs","md","height","margin","children","Link","to","snippet","channelId","flexDirection","textAlign","image","thumbnails","default","url","alt","title","mb","border","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","color","ml","statistics","subscriberCount","fontWieght","parseInt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Elka-Tube/project/src/Companets/Channel-card/ChannelCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Box, CardMedia, Typography, CardContent, } from '@mui/material'\r\nimport { CheckCircle } from '@mui/icons-material'\r\nconst ChannelCard = ({ video }) => {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                boxShadow: 'none',\r\n                borderRadius: '20px',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                width: { xs: '356px', md: '320px' },\r\n                height: '326px',\r\n                margin: 'auto',\r\n            }}>\r\n            <Link to={`/channel/${video?.snippet?.channelId}`}>\r\n                <CardContent sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                }}>\r\n                    <CardMedia image={video?.snippet?.thumbnails?.default?.url}\r\n                        alt={video?.snippet?.title}\r\n                        sx={{\r\n                            borderRadius: '50%',\r\n                            height: '180px',\r\n                            width: '180px',\r\n                            mb: 2,\r\n                            border: '1px solid #e3e3e3'\r\n                        }} />\r\n\r\n                    <Typography variant={'h6'}>{video?.snippet?.title}\r\n                        <CheckCircle sx={{ fontSize: '14px', color: 'gray', ml: '5px' }} />\r\n                    </Typography>\r\n                    {video?.statistics?.subscriberCount && (\r\n                        <Typography sx={{\r\n                            fontSize: '15px',\r\n                            fontWieght: 500,\r\n                            color: 'gray',\r\n                        }}>\r\n                            {parseInt(video?.statistics?.subscriberCount).toLocaleString(\"en-US\")}{''} Subscribers\r\n                        </Typography>\r\n                    )}\r\n                </CardContent>\r\n            </Link>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ChannelCard\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}