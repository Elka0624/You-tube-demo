{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Elka-Tube\\\\project\\\\src\\\\Companets\\\\Videos\\\\Videos.jsx\";\nimport { Stack, Box } from '@mui/material';\nimport { VideoCard, ChannelCard, Loader } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Videos = _ref => {\n  let {\n    videos\n  } = _ref;\n  // if(!videos.lenght) return <Loader />\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    width: '100%',\n    direction: 'row',\n    flexWrap: \"wrap\",\n    justifyContent: \"start\",\n    alignItems: \"start\",\n    gap: 2,\n    children: videos.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n      children: [item.id.videoId && /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 26\n      }, this), item.id.channelId && /*#__PURE__*/_jsxDEV(ChannelCard, {\n        video: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 28\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["Stack","Box","VideoCard","ChannelCard","Loader","jsxDEV","_jsxDEV","Videos","_ref","videos","width","direction","flexWrap","justifyContent","alignItems","gap","children","map","item","idx","id","videoId","video","fileName","_jsxFileName","lineNumber","columnNumber","channelId","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Elka-Tube/project/src/Companets/Videos/Videos.jsx"],"sourcesContent":["import { Stack, Box } from '@mui/material'\r\nimport { VideoCard, ChannelCard, Loader } from '..'\r\n\r\nconst Videos = ({ videos }) => {\r\n\t// if(!videos.lenght) return <Loader />\r\n\r\n\treturn (\r\n\t\t<Stack\r\n\t\t\twidth={'100%'}\r\n\t\t\tdirection={'row'}\r\n\t\t\tflexWrap='wrap'\r\n\t\t\tjustifyContent='start'\r\n\t\t\talignItems='start'\r\n\t\t\tgap={2}\r\n\t\t>\r\n\t\t\t{videos.map((item, idx) => (\r\n\t\t\t\t<Box key={idx}>\r\n\t\t\t\t\t{item.id.videoId && <VideoCard video={item} />}\r\n\t\t\t\t\t{item.id.channelId && <ChannelCard video={item} />}\r\n\t\t\t\t</Box>\r\n\t\t\t))}\r\n\t\t</Stack>\r\n\t)\r\n}\r\n\r\nexport default Videos"],"mappings":";AAAA,SAASA,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAC1C,SAASC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,IAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACzB;;EAEA,oBACCF,OAAA,CAACN,KAAK;IACLU,KAAK,EAAE,MAAO;IACdC,SAAS,EAAE,KAAM;IACjBC,QAAQ,EAAC,MAAM;IACfC,cAAc,EAAC,OAAO;IACtBC,UAAU,EAAC,OAAO;IAClBC,GAAG,EAAE,CAAE;IAAAC,QAAA,EAENP,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACrBb,OAAA,CAACL,GAAG;MAAAe,QAAA,GACFE,IAAI,CAACE,EAAE,CAACC,OAAO,iBAAIf,OAAA,CAACJ,SAAS;QAACoB,KAAK,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7CR,IAAI,CAACE,EAAE,CAACO,SAAS,iBAAIrB,OAAA,CAACH,WAAW;QAACmB,KAAK,EAAEJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFzCP,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGR,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEV,CAAC;AAAAE,EAAA,GApBKrB,MAAM;AAsBZ,eAAeA,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}