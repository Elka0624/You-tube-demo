{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Elka-Tube\\\\project\\\\src\\\\Companets\\\\Channel-card\\\\ChannelCard.jsx\";\nimport React from 'react';\nimport { Box, CardMedia, Typography, CardContent } from '@mui/material';\nimport { CheckCircle } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChannelCard = _ref => {\n  var _video$snippet, _video$snippet$thumbn, _video$snippet$thumbn2, _video$snippet2, _video$snippet3, _video$statistics, _video$statistics2;\n  let {\n    video\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      boxShadow: 'none',\n      borderRadius: '20px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: {\n        xs: '356px',\n        md: '320px'\n      },\n      height: '326px',\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        image: video === null || video === void 0 ? void 0 : (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : (_video$snippet$thumbn = _video$snippet.thumbnails) === null || _video$snippet$thumbn === void 0 ? void 0 : (_video$snippet$thumbn2 = _video$snippet$thumbn.default) === null || _video$snippet$thumbn2 === void 0 ? void 0 : _video$snippet$thumbn2.url,\n        alt: video === null || video === void 0 ? void 0 : (_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.title,\n        sx: {\n          borderRadius: '50%',\n          height: '180px',\n          width: '180px',\n          mb: 2,\n          border: '1px solid #e3e3e3'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: 'h6',\n        children: [video === null || video === void 0 ? void 0 : (_video$snippet3 = video.snippet) === null || _video$snippet3 === void 0 ? void 0 : _video$snippet3.title, /*#__PURE__*/_jsxDEV(CheckCircle, {\n          sx: {\n            fontSize: '14px',\n            color: 'gray',\n            ml: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), (video === null || video === void 0 ? void 0 : (_video$statistics = video.statistics) === null || _video$statistics === void 0 ? void 0 : _video$statistics.subscriberCount) && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: '15px',\n          fontWieght: 500,\n          color: 'gray'\n        },\n        children: [parseInt(video === null || video === void 0 ? void 0 : (_video$statistics2 = video.statistics) === null || _video$statistics2 === void 0 ? void 0 : _video$statistics2.subscriberCount).toLocaleString(\"en-US\"), \" Subscribers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ChannelCard;\nexport default ChannelCard;\nvar _c;\n$RefreshReg$(_c, \"ChannelCard\");","map":{"version":3,"names":["React","Box","CardMedia","Typography","CardContent","CheckCircle","jsxDEV","_jsxDEV","ChannelCard","_ref","_video$snippet","_video$snippet$thumbn","_video$snippet$thumbn2","_video$snippet2","_video$snippet3","_video$statistics","_video$statistics2","video","sx","boxShadow","borderRadius","display","justifyContent","alignItems","width","xs","md","height","margin","children","flexDirection","textAlign","image","snippet","thumbnails","default","url","alt","title","mb","border","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontSize","color","ml","statistics","subscriberCount","fontWieght","parseInt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Elka-Tube/project/src/Companets/Channel-card/ChannelCard.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Box, CardMedia, Typography, CardContent, } from '@mui/material'\r\nimport { CheckCircle } from '@mui/icons-material'\r\nconst ChannelCard = ({video}) => {\r\nreturn (\r\n    <Box\r\n        sx={{\r\n            boxShadow: 'none',\r\n            borderRadius: '20px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: {xs: '356px', md: '320px'},\r\n            height: '326px',\r\n            margin: 'auto',\r\n        }}>\r\n            <CardContent sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                textAlign: 'center',\r\n            }}>\r\n                <CardMedia image={video?.snippet?.thumbnails?.default?.url} \r\n                alt={video?.snippet?.title} \r\n                sx={{\r\n                    borderRadius: '50%',\r\n                    height: '180px',\r\n                    width: '180px',\r\n                    mb: 2,\r\n                    border: '1px solid #e3e3e3'\r\n                }}/>\r\n\r\n                <Typography variant={'h6'}>{video?.snippet?.title} \r\n                    <CheckCircle sx={{fontSize: '14px', color: 'gray', ml: '5px'}} /> \r\n                </Typography>\r\n                {video?.statistics?.subscriberCount && (\r\n                    <Typography sx={{\r\n                        fontSize: '15px',\r\n                        fontWieght: 500,\r\n                        color: 'gray',\r\n                    }}>\r\n                        {parseInt(video?.statistics?.subscriberCount).toLocaleString(\"en-US\")} Subscribers\r\n                    </Typography>\r\n                )}\r\n            </CardContent>\r\n            \r\n    </Box>\r\n)\r\n}\r\n\r\nexport default ChannelCard\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,WAAW,QAAS,eAAe;AACxE,SAASC,WAAW,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,WAAW,GAAGC,IAAA,IAAa;EAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,iBAAA,EAAAC,kBAAA;EAAA,IAAZ;IAACC;EAAK,CAAC,GAAAR,IAAA;EAC5B,oBACIF,OAAA,CAACN,GAAG;IACAiB,EAAE,EAAE;MACAC,SAAS,EAAE,MAAM;MACjBC,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,KAAK,EAAE;QAACC,EAAE,EAAE,OAAO;QAAEC,EAAE,EAAE;MAAO,CAAC;MACjCC,MAAM,EAAE,OAAO;MACfC,MAAM,EAAE;IACZ,CAAE;IAAAC,QAAA,eACEtB,OAAA,CAACH,WAAW;MAACc,EAAE,EAAE;QACbG,OAAO,EAAE,MAAM;QACfS,aAAa,EAAE,QAAQ;QACvBR,cAAc,EAAE,QAAQ;QACxBS,SAAS,EAAE;MACf,CAAE;MAAAF,QAAA,gBACEtB,OAAA,CAACL,SAAS;QAAC8B,KAAK,EAAEf,KAAK,aAALA,KAAK,wBAAAP,cAAA,GAALO,KAAK,CAAEgB,OAAO,cAAAvB,cAAA,wBAAAC,qBAAA,GAAdD,cAAA,CAAgBwB,UAAU,cAAAvB,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA4BwB,OAAO,cAAAvB,sBAAA,uBAAnCA,sBAAA,CAAqCwB,GAAI;QAC3DC,GAAG,EAAEpB,KAAK,aAALA,KAAK,wBAAAJ,eAAA,GAALI,KAAK,CAAEgB,OAAO,cAAApB,eAAA,uBAAdA,eAAA,CAAgByB,KAAM;QAC3BpB,EAAE,EAAE;UACAE,YAAY,EAAE,KAAK;UACnBO,MAAM,EAAE,OAAO;UACfH,KAAK,EAAE,OAAO;UACde,EAAE,EAAE,CAAC;UACLC,MAAM,EAAE;QACZ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEJrC,OAAA,CAACJ,UAAU;QAAC0C,OAAO,EAAE,IAAK;QAAAhB,QAAA,GAAEZ,KAAK,aAALA,KAAK,wBAAAH,eAAA,GAALG,KAAK,CAAEgB,OAAO,cAAAnB,eAAA,uBAAdA,eAAA,CAAgBwB,KAAK,eAC7C/B,OAAA,CAACF,WAAW;UAACa,EAAE,EAAE;YAAC4B,QAAQ,EAAE,MAAM;YAAEC,KAAK,EAAE,MAAM;YAAEC,EAAE,EAAE;UAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,EACZ,CAAA3B,KAAK,aAALA,KAAK,wBAAAF,iBAAA,GAALE,KAAK,CAAEgC,UAAU,cAAAlC,iBAAA,uBAAjBA,iBAAA,CAAmBmC,eAAe,kBAC/B3C,OAAA,CAACJ,UAAU;QAACe,EAAE,EAAE;UACZ4B,QAAQ,EAAE,MAAM;UAChBK,UAAU,EAAE,GAAG;UACfJ,KAAK,EAAE;QACX,CAAE;QAAAlB,QAAA,GACGuB,QAAQ,CAACnC,KAAK,aAALA,KAAK,wBAAAD,kBAAA,GAALC,KAAK,CAAEgC,UAAU,cAAAjC,kBAAA,uBAAjBA,kBAAA,CAAmBkC,eAAe,CAAC,CAACG,cAAc,CAAC,OAAO,CAAC,EAAC,cAC1E;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACf;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEV,CAAC;AAAAU,EAAA,GA7CK9C,WAAW;AA+CjB,eAAeA,WAAW;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}