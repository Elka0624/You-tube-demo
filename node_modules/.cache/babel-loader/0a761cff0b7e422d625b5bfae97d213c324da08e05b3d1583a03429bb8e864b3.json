{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Elka-Tube\\\\project\\\\src\\\\Companets\\\\Search\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { ApiService } from '../../Service/api.service';\nimport { Box, Container, Typography } from '@mui/material';\nimport { colors } from '../../Constants/Colors';\nimport { Videos } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await ApiService.fetching(`search?part=snippet&q=${id}`);\n        setVideos(data.items);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    sx: {\n      height: '90vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: '90%',\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: 'h4',\n        fontWeight: 'bold',\n        mb: 2,\n        children: [\"Search resualt for \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colors.blue\n          },\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 36\n        }, this), \" Videos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Videos, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"VZXNrHZcjQKsuQ3/lmNlciNDlxM=\", false, function () {\n  return [useParams];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useParams","useState","ApiService","Box","Container","Typography","colors","Videos","jsxDEV","_jsxDEV","Search","_s","videos","setVideos","id","getData","data","fetching","items","error","console","log","p","sx","height","children","maxWidth","variant","fontWeight","mb","style","color","blue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Elka-Tube/project/src/Companets/Search/Search.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useState } from 'react';\r\nimport { ApiService } from '../../Service/api.service'\r\nimport { Box, Container, Typography } from '@mui/material';\r\nimport { colors } from '../../Constants/Colors' \r\nimport { Videos } from '..';\r\n\r\nconst Search = () => {\r\n    const [videos, setVideos] = useState([]);\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try{\r\n                const data = await ApiService.fetching(`search?part=snippet&q=${id}`)\r\n                setVideos(data.items)\r\n            }catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        getData()\r\n    }, [id])\r\n    \r\nreturn (\r\n    <Box p={2} sx={{height: '90vh'}}>\r\n        <Container maxWidth={'90%'}>\r\n            <Typography variant={'h4'} fontWeight={'bold'} mb={2}>\r\n                Search resualt for <span style={{color: colors.blue}}>{id}</span> Videos\r\n            </Typography>\r\n                <Videos videos={videos} />\r\n        </Container>\r\n    </Box>\r\n)\r\n}\r\n\r\nexport default Search\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,GAAG,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAC1D,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,MAAM,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAACa;EAAE,CAAC,GAAGd,SAAS,CAAC,CAAC;EAExBD,SAAS,CAAC,MAAM;IACZ,MAAMgB,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAG;QACC,MAAMC,IAAI,GAAG,MAAMd,UAAU,CAACe,QAAQ,CAAE,yBAAwBH,EAAG,EAAC,CAAC;QACrED,SAAS,CAACG,IAAI,CAACE,KAAK,CAAC;MACzB,CAAC,QAAOC,KAAK,EAAE;QACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACDJ,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAEZ,oBACIL,OAAA,CAACN,GAAG;IAACmB,CAAC,EAAE,CAAE;IAACC,EAAE,EAAE;MAACC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,eAC5BhB,OAAA,CAACL,SAAS;MAACsB,QAAQ,EAAE,KAAM;MAAAD,QAAA,gBACvBhB,OAAA,CAACJ,UAAU;QAACsB,OAAO,EAAE,IAAK;QAACC,UAAU,EAAE,MAAO;QAACC,EAAE,EAAE,CAAE;QAAAJ,QAAA,GAAC,qBAC/B,eAAAhB,OAAA;UAAMqB,KAAK,EAAE;YAACC,KAAK,EAAEzB,MAAM,CAAC0B;UAAI,CAAE;UAAAP,QAAA,EAAEX;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,WACrE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACT3B,OAAA,CAACF,MAAM;QAACK,MAAM,EAAEA;MAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA1BKD,MAAM;EAAA,QAEKV,SAAS;AAAA;AAAAqC,EAAA,GAFpB3B,MAAM;AA4BZ,eAAeA,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}