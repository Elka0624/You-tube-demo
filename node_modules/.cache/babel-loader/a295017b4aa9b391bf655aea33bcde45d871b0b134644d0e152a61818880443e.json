{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Elka-Tube\\\\project\\\\src\\\\Companets\\\\Channel\\\\Channel.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Container } from '@mui/material';\nimport { ApiService } from '../../Service/api.service';\nimport { ChannelCard, Videos } from '../';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Channel = () => {\n  _s();\n  var _channelDetail$brandi, _channelDetail$brandi2;\n  const [channelDetail, setChannelDetail] = useState();\n  const [videos, setVideos] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const dataChannelDetail = await ApiService.fetching(`channels?part=snippet&id=${id}`);\n        setChannelDetail(dataChannelDetail.items[0]);\n        const dataVideo = await ApiService.fetching(`search?channelId=${id}&part=snippet%2Cid&order=date`);\n        setVideos(dataVideo === null || dataVideo === void 0 ? void 0 : dataVideo.items);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: '95vh',\n    mt: '1vh',\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: '100%',\n        height: '200px',\n        zIndex: 10,\n        sx: {\n          backgroundImage: `url(${channelDetail === null || channelDetail === void 0 ? void 0 : (_channelDetail$brandi = channelDetail.brandingSettings) === null || _channelDetail$brandi === void 0 ? void 0 : (_channelDetail$brandi2 = _channelDetail$brandi.image) === null || _channelDetail$brandi2 === void 0 ? void 0 : _channelDetail$brandi2.bannerExternalUrl})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          objectFit: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelCard, {\n        video: channelDetail,\n        marginTop: '-100px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: '90%',\n      children: /*#__PURE__*/_jsxDEV(Videos, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(Channel, \"IB6Y2ZDzs6piKNYdZibM3PxL2mk=\", false, function () {\n  return [useParams];\n});\n_c = Channel;\nexport default Channel;\nvar _c;\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"names":["useEffect","useState","useParams","Box","Container","ApiService","ChannelCard","Videos","jsxDEV","_jsxDEV","Channel","_s","_channelDetail$brandi","_channelDetail$brandi2","channelDetail","setChannelDetail","videos","setVideos","id","getData","dataChannelDetail","fetching","items","dataVideo","error","console","log","minHeight","mt","children","width","height","zIndex","sx","backgroundImage","brandingSettings","image","bannerExternalUrl","backgroundPosition","backgroundSize","objectFit","backgroundRepeat","fileName","_jsxFileName","lineNumber","columnNumber","video","marginTop","maxWidth","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/Elka-Tube/project/src/Companets/Channel/Channel.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Box, Container } from '@mui/material'\r\nimport { ApiService } from '../../Service/api.service'\r\nimport { ChannelCard, Videos } from '../'\r\n\r\nconst Channel = () => {\r\n\tconst [channelDetail, setChannelDetail] = useState()\r\n\tconst [videos, setVideos] = useState([])\r\n\tconst { id } = useParams()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst dataChannelDetail = await ApiService.fetching(`channels?part=snippet&id=${id}`)\r\n\t\t\t\tsetChannelDetail(dataChannelDetail.items[0])\r\n\t\t\t\tconst dataVideo = await ApiService.fetching(\r\n\t\t\t\t\t`search?channelId=${id}&part=snippet%2Cid&order=date`\r\n\t\t\t\t)\r\n\t\t\t\tsetVideos(dataVideo?.items)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetData()\r\n\t}, [id])\r\n\r\n\treturn (\r\n\t\t<Box minHeight={'95vh'} mt={'1vh'}>\r\n\t\t\t<Box>\r\n\t\t\t\t<Box\r\n\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\theight={'200px'}\r\n\t\t\t\t\tzIndex={10}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tbackgroundImage: `url(${channelDetail?.brandingSettings?.image?.bannerExternalUrl})`,\r\n\t\t\t\t\t\tbackgroundPosition: 'center',\r\n\t\t\t\t\t\tbackgroundSize: 'cover',\r\n\t\t\t\t\t\tobjectFit: 'cover',\r\n\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<ChannelCard video={channelDetail} marginTop={'-100px'} />\r\n\t\t\t</Box>\r\n\t\t\t<Container maxWidth={'90%'}>\r\n\t\t\t\t<Videos videos={videos} />\r\n\t\t\t</Container>\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default Channel"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}